{"version":3,"sources":["MapStates/MapStates.js","MapEurope/MapEurope.js","Nav/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["MapStates","useState","statesStatistics","setStatesStatistics","fetchStatistics","a","fetch","data","json","statistics","console","log","useEffect","style","width","height","map","backgroundColor","containerStyle","containerClassName","onRegionTipShow","event","tip","code","currStateStatistic","find","state","innerText","html","cases","recovered","deaths","active","MapEurope","countriesStatistics","setCountriesStatistics","showCasesOnHover","length","currCountryStatistic","country","countryInfo","iso2","innerHTML","Nav","navStyle","color","textDecoration","className","to","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9df2d08.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { VectorMap } from \"react-jvectormap\";\r\nimport './MapStates.css'\r\n\r\nfunction MapStates() {\r\n  const [statesStatistics, setStatesStatistics] = useState([]);\r\n\r\n  const fetchStatistics = async () => {\r\n    const data = await fetch('https://disease.sh/v3/covid-19/states');\r\n    const statistics = await data.json();\r\n    console.log(statistics);\r\n    setStatesStatistics(statistics);\r\n  }\r\n\r\n  const showCasesOnHover = (event, tip, code) => {\r\n    const currStateStatistic = statesStatistics.find(state => state.state === tip[0].innerText);\r\n    tip.html(`<div class=\"statistics\">\r\n      <h4 class=\"state-name\">${currStateStatistic.state}</h4>\r\n      <p><strong>Cases:</strong> ${currStateStatistic.cases}</p>\r\n      <p><strong>Recovered:</strong> ${currStateStatistic.recovered}</p>\r\n      <p><strong>Deaths:</strong> ${currStateStatistic.deaths}</p>\r\n      <p><strong>Active:</strong> ${currStateStatistic.active}</p>\r\n    </div>`);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchStatistics();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ width: '100%', height: '92vh' }}>\r\n      <VectorMap map={'us_aea'}\r\n        backgroundColor=\"#40916c\"\r\n        containerStyle={{\r\n          width: '100%',\r\n          height: '100%'\r\n        }}\r\n        containerClassName=\"map\"\r\n        onRegionTipShow={showCasesOnHover}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapStates;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { VectorMap } from \"react-jvectormap\";\r\nimport './MapEurope.css'\r\n\r\nfunction MapEurope() {\r\n  const [countriesStatistics, setCountriesStatistics] = useState([]);\r\n\r\n  const fetchStatistics = async () => {\r\n    const data = await fetch(`https://disease.sh/v3/covid-19/countries`);\r\n    const statistics = await data.json();\r\n    console.log(statistics);\r\n    setCountriesStatistics(statistics);\r\n  }\r\n\r\n  const showCasesOnHover = async (event, tip, code) => {\r\n    if (code !== 'XK' && code !== 'AX' && countriesStatistics.length !== 0) {\r\n      const currCountryStatistic = countriesStatistics.find(country => country.countryInfo.iso2 === code);\r\n      tip[0].innerHTML = `<div class=\"statistics\">\r\n      <h4 class=\"state-name\">${currCountryStatistic.country}</h4>\r\n      <p><strong>Cases:</strong> ${currCountryStatistic.cases}</p>\r\n      <p><strong>Recovered:</strong> ${currCountryStatistic.recovered}</p>\r\n      <p><strong>Deaths:</strong> ${currCountryStatistic.deaths}</p>\r\n      <p><strong>Active:</strong> ${currCountryStatistic.active}</p>\r\n    </div>`;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchStatistics();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ width: '100%', height: '92vh' }}>\r\n      <VectorMap map={'europe_mill'}\r\n        backgroundColor=\"#40916c\"\r\n        containerStyle={{\r\n          width: '100%',\r\n          height: '100%'\r\n        }}\r\n        containerClassName=\"map\"\r\n        onRegionTipShow={showCasesOnHover}\r\n\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapEurope;\r\n","import './Nav.css';\r\nimport React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Nav() {\r\n\r\n    const navStyle = {\r\n        color: '#fff',\r\n        textDecoration: 'none'\r\n    }\r\n\r\n  return (\r\n    <nav className=\"navigation\">\r\n            <Link style={navStyle} to=\"/\">\r\n            <h4>Coronavirus</h4>\r\n                </Link>\r\n            <ul className=\"nav-links\">\r\n                <Link style={navStyle} to=\"/states\">\r\n                    <li>United states</li>\r\n                </Link>\r\n                <Link style={navStyle} to=\"/europe\">\r\n                    <li>Europe</li>\r\n                </Link>\r\n            </ul>\r\n        </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;","import './App.css';\nimport React from \"react\";\nimport MapStates from \"./MapStates/MapStates\";\nimport MapEurope from \"./MapEurope/MapEurope\";\nimport Nav from \"./Nav/Nav\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n    <Nav />\n      <Switch>\n        <Route path=\"/\" exact component={MapStates}/>\n        <Route path=\"/europe\" component={MapEurope}/>\n        <Route path=\"/states\" component={MapStates}/>\n      </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}