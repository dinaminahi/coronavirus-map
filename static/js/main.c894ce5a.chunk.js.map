{"version":3,"sources":["Map/Map.js","App.js","reportWebVitals.js","index.js"],"names":["Map","useState","statesStatistics","setStatesStatistics","fetchStatistics","a","fetch","data","json","statistics","console","log","useEffect","style","width","height","map","backgroundColor","containerStyle","containerClassName","onRegionTipShow","event","tip","code","currStateStatistic","find","state","innerText","innerHTML","cases","recovered","deaths","active","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRA4CeA,MAxCf,WAAgB,IAAD,EACmCC,mBAAS,IAD5C,mBACNC,EADM,KACYC,EADZ,KAGPC,EAAe,uCAAG,8BAAAC,EAAA,sEACHC,MAAM,yCADH,cAChBC,EADgB,gBAEGA,EAAKC,OAFR,OAEhBC,EAFgB,OAGtBC,QAAQC,IAAIF,GACZN,EAAoBM,GAJE,2CAAH,qDAsBrB,OAJAG,qBAAU,WACRR,MACC,IAGD,qBAAKS,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SAArC,SACE,cAAC,YAAD,CAAWC,IAAK,SACdC,gBAAgB,UAChBC,eAAgB,CACdJ,MAAO,OACPC,OAAQ,QAEVI,mBAAmB,MACnBC,gBAxBmB,SAACC,EAAOC,EAAKC,GACpC,IAAMC,EAAqBtB,EAAiBuB,MAAK,SAAAC,GAAK,OAAIA,EAAMA,QAAUJ,EAAI,GAAGK,aACjFL,EAAI,GAAGM,UAAP,iEAC2BJ,EAAmBE,MAD9C,mDAE+BF,EAAmBK,MAFlD,sDAGmCL,EAAmBM,UAHtD,mDAIgCN,EAAmBO,OAJnD,mDAKgCP,EAAmBQ,OALnD,0BCJWC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACA,cAAC,EAAD,OCKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c894ce5a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { VectorMap } from \"react-jvectormap\";\r\nimport './Map.css'\r\n\r\nfunction Map() {\r\n  const [statesStatistics, setStatesStatistics] = useState([]);\r\n\r\n  const fetchStatistics = async () => {\r\n    const data = await fetch('https://disease.sh/v3/covid-19/states');\r\n    const statistics = await data.json();\r\n    console.log(statistics);\r\n    setStatesStatistics(statistics);\r\n  }\r\n\r\n  const showCasesOnHover = (event, tip, code) => {\r\n    const currStateStatistic = statesStatistics.find(state => state.state === tip[0].innerText);\r\n    tip[0].innerHTML = `<div class=\"statistics\">\r\n      <h4 class=\"state-name\">${currStateStatistic.state}</h4>\r\n      <p><strong>Cases:</strong> ${currStateStatistic.cases}</p>\r\n      <p><strong>Recovered:</strong> ${currStateStatistic.recovered}</p>\r\n      <p><strong>Deaths:</strong> ${currStateStatistic.deaths}</p>\r\n      <p><strong>Active:</strong> ${currStateStatistic.active}</p>\r\n    </div>`;\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchStatistics();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ width: '100%', height: '100vh' }}>\r\n      <VectorMap map={'us_aea'}\r\n        backgroundColor=\"#40916c\"\r\n        containerStyle={{\r\n          width: '100%',\r\n          height: '100%'\r\n        }}\r\n        containerClassName=\"map\"\r\n        onRegionTipShow={showCasesOnHover}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import './App.css';\nimport React from \"react\";\nimport Map from \"./Map/Map\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Map />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}